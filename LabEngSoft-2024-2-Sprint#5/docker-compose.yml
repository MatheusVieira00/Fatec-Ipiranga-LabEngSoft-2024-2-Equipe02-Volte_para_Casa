# version: '3.8'

# services:
#   db:
#     image: mysql:8.0
#     container_name: mysql_container
#     environment:
#       MYSQL_ROOT_PASSWORD: 123456
#       MYSQL_DATABASE: volteparacasa
#     ports:
#       - "3307:3306"
#     volumes:
#       - db_data:/var/lib/mysql
#     networks:
#       - app_network

#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: volteparacasa_springboot:latest  # Nome específico para a imagem do Spring Boot
#     container_name: springboot_app
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/volteparacasa?createDatabaseIfNotExist=true
#       SPRING_DATASOURCE_USERNAME: root
#       SPRING_DATASOURCE_PASSWORD: 123456
#       SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
#       SPRING_JPA_HIBERNATE_DDL_AUTO: update
#       SPRING_JPA_SHOW_SQL: "true"
#     depends_on:
#       - db
#     ports:
#       - "8080:8080"
#     networks:
#       - app_network

# volumes:
#   db_data:

# networks:
#   app_network:



# services:
#   db:
#     image: mysql:8.0
#     container_name: mysql_container1_v1
#     environment:
#       MYSQL_ROOT_PASSWORD: 123456
#       MYSQL_DATABASE: volteparacasa
#     ports:
#       - "3307:3306"
#     volumes:
#       - db_data:/var/lib/mysql
#     networks:
#       - app_network

#   app:
#     build:
#       context: ./SpringTg 
#       dockerfile: Dockerfile
#     image: volteparacasa_springboot:latest  # Nome específico para a imagem do Spring Boot
#     container_name: springboot_app_v1
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/volteparacasa?createDatabaseIfNotExist=true
#       SPRING_DATASOURCE_USERNAME: root
#       SPRING_DATASOURCE_PASSWORD: 123456
#       SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
#       SPRING_JPA_HIBERNATE_DDL_AUTO: update
#       SPRING_JPA_SHOW_SQL: "true"
#     depends_on:
#       - db
#     ports:
#       - "8080:8080"
#     networks:
#       - app_network

#   angular:
#     build:
#       context: ./teste # Altere para o caminho correto do seu projeto Angular
#       dockerfile: Dockerfile  # O Dockerfile do Angular deve estar neste diretório
#     image: angular_dashboard:latest
#     container_name: angular_app_v1
#     ports:
#       - "4200:80"  # Mapeia a porta do Nginx para 4200
#     networks:
#       - app_network

# volumes:
#   db_data:

# networks:
#   app_network:

# version: '3.8'

# services:
#   frontend:
#     image: angular_dashboard:latest  # substitua com o nome da imagem do seu frontend em Angular
#     container_name: frontend-container
#     ports:
#       - "80:80"
#     networks:
#       - app-network

#   backend:
#     image: volteparacasa_springboot:latest  # substitua com o nome da imagem do seu backend em Spring Boot
#     container_name: backend-container
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-container:3306/volteparacasa01?useSSL=true
#       - SPRING_DATASOURCE_USERNAME=uservolteparacasa
#       - SPRING_DATASOURCE_PASSWORD=Volte2024@
#     depends_on:
#       - mysql
#     ports:
#       - "8080:8080"
#     networks:
#       - app-network

#   mysql:
#     image: mysql:8.0
#     container_name: mysql-container
#     environment:
#       - MYSQL_ROOT_PASSWORD=rootpassword
#       - MYSQL_DATABASE=volteparacasa01
#       - MYSQL_USER=uservolteparacasa
#       - MYSQL_PASSWORD=Volte2024@
#     volumes:
#       - mysql-data:/var/lib/mysql
#     networks:
#       - app-network

#   storage-account:
#     image: mcr.microsoft.com/azure-cli  # imagem para acessar o Azure CLI
#     container_name: storage-container
#     environment:
#       - AZURE_STORAGE_ACCOUNT=contaarmazenamentovolte
#       - AZURE_STORAGE_KEY=EE8kSP5hE683yMUvFDNWcz4GlXuFYMeXVDnrimnkvePtM4SB4kqHfJmpJrJXH0yJ+8yiuIRJvq/i+AStajRnnw==  # substitua com sua chave de acesso
#     networks:
#       - app-network

# volumes:
#   mysql-data:

# networks:
#   app-network:


# version: '3.8'

# services:
#   frontend:
#     image: volteacr.azurecr.io/angular_app_v1:v1  # Substitua com o nome da imagem do seu frontend Angular no ACR
#     container_name: frontend-container
#     ports:
#       - "80:80"
#     networks:
#       - app-network

#   backend:
#     image: volteacr.azurecr.io/volteparacasa_springboot:v1  # Substitua com o nome da imagem do seu backend Spring Boot no ACR
#     container_name: backend-container
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-container:3306/volteparacasa01?useSSL=true
#       - SPRING_DATASOURCE_USERNAME=uservolteparacasa
#       - SPRING_DATASOURCE_PASSWORD=Volte2024@
#     depends_on:
#       - mysql
#     ports:
#       - "8080:8080"
#     networks:
#       - app-network

#   mysql:
#     image: volteacr.azurecr.io/mysql_container:v1  # Substitua com o nome da imagem do MySQL no ACR
#     container_name: mysql-container
#     environment:
#       - MYSQL_ROOT_PASSWORD=rootpassword
#       - MYSQL_DATABASE=volteparacasa01
#       - MYSQL_USER=uservolteparacasa
#       - MYSQL_PASSWORD=Volte2024@
#     volumes:
#       - mysql-data:/var/lib/mysql
#     networks:
#       - app-network

#   storage-account:
#     image: mcr.microsoft.com/azure-cli  # Imagem para acessar o Azure CLI
#     container_name: storage-container
#     environment:
#       - AZURE_STORAGE_ACCOUNT=contaarmazenamentovolte
#       - AZURE_STORAGE_KEY=EE8kSP5hE683yMUvFDNWcz4GlXuFYMeXVDnrimnkvePtM4SB4kqHfJmpJrJXH0yJ+8yiuIRJvq/i+AStajRnnw==  # Substitua com sua chave de acesso
#     networks:
#       - app-network

# volumes:
#   mysql-data:

# networks:
#   app-network:

version: '3.8'

services:
  # Serviço para o Backend (Spring Boot)
  backend:
    image: volteparacasa-backend:v2 # Nome da imagem do backend
    container_name: backendv4
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/volteparacasa01?useSSL=false&allowPublicKeyRetrieval=true # URL corrigida
      SPRING_DATASOURCE_USERNAME: uservolteparacasa
      SPRING_DATASOURCE_PASSWORD: Volte2024@
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
    ports:
      - "8083:8080"  # Expõe a porta 8080
    depends_on:
      - mysql  # Garante que o MySQL esteja rodando antes do backend
    networks:
      - app-network
    command: ["./wait-for-it.sh", "mysql:3306"]

  # Serviço para o Frontend (Angular)
  frontend:
    image: volteparacasa-frontend:v2 # Nome da imagem do frontend
    container_name: frontendv4
    ports:
      - "85:80"  # Expõe a porta 80
    depends_on:
      - backend  # Garante que o backend esteja rodando antes do frontend
    networks:
      - app-network

  # Serviço para o MySQL
  mysql:
    image: mysql:8.0 # Imagem oficial do MySQL 8.0
    container_name: mysqlv4
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # Senha do root do MySQL
      MYSQL_DATABASE: volteparacasa01 # Nome do banco de dados
      MYSQL_USER: uservolteparacasa # Nome de usuário
      MYSQL_PASSWORD: Volte2024@ # Senha do usuário
    volumes:
      - mysql-data:/var/lib/mysql # Volume para persistir os dados
    ports:
      - "3305:3306"  # Expõe a porta 3306 do MySQL para a porta 3308 na máquina host
    networks:
      - app-network

# Rede compartilhada para os containers se comunicarem
networks:
  app-network:

# Volume para persistir dados do MySQL
volumes:
  mysql-data:
    driver: local

